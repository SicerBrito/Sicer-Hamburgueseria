// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Data;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(DbAppContext))]
    [Migration("20230915141008_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionCategoria")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("DescripcionCategoria");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreCategoria");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Dominio.Entities.Chef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdChef")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EspecialidadChef")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar")
                        .HasColumnName("EspecialidadChef");

                    b.Property<string>("NombreChef")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreChef");

                    b.HasKey("Id");

                    b.ToTable("Chef", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Hamburgesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdHamburgesa")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("CategoriaId");

                    b.Property<int?>("ChefId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("ChefId");

                    b.Property<string>("NombreHamburgesa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreHamburgesa");

                    b.Property<long>("Precio")
                        .HasColumnType("BIGINT")
                        .HasColumnName("Precio");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ChefId");

                    b.ToTable("Hamburgesa", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.HamburgesaIngrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdHamburgesaIngrediente")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HamburgesaId")
                        .HasColumnType("int")
                        .HasColumnName("HamburgesaId");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int")
                        .HasColumnName("IngredienteId");

                    b.HasKey("Id");

                    b.HasIndex("HamburgesaId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("HamburgesaIngrediente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdIngrediente")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionIngrediente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("DescripcionIngrediente");

                    b.Property<string>("NombreIngrediente")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreIngrediente");

                    b.Property<long>("PrecioIngrediente")
                        .HasColumnType("BIGINT")
                        .HasColumnName("PrecioIngrediente");

                    b.Property<int>("StockIngrediente")
                        .HasColumnType("int")
                        .HasColumnName("StockIngrediente");

                    b.HasKey("Id");

                    b.ToTable("Ingrediente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Rol")
                        .HasAnnotation("MySqlValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreRol");

                    b.HasKey("Id");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Usuario")
                        .HasAnnotation("MySqlValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_UsuarioRol")
                        .HasAnnotation("MySqlValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("Rol_Id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("Usuario_Id");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburgesa", b =>
                {
                    b.HasOne("Dominio.Entities.Categoria", "Categorias")
                        .WithMany("Hamburgesas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Chef", "Chefs")
                        .WithMany("Hamburgesas")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");

                    b.Navigation("Chefs");
                });

            modelBuilder.Entity("Dominio.Entities.HamburgesaIngrediente", b =>
                {
                    b.HasOne("Dominio.Entities.Hamburgesa", "Hamburgesas")
                        .WithMany("HamburgesaIngredientes")
                        .HasForeignKey("HamburgesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Ingrediente", "Ingredientes")
                        .WithMany("HamburgesaIngredientes")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hamburgesas");

                    b.Navigation("Ingredientes");
                });

            modelBuilder.Entity("Dominio.Entities.RefreshToken", b =>
                {
                    b.HasOne("Dominio.Entities.Usuario", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dominio.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Dominio.Entities.Rol", "Roles")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Usuario", "Usuarios")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.HasOne("Dominio.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dominio.Entities.Categoria", b =>
                {
                    b.Navigation("Hamburgesas");
                });

            modelBuilder.Entity("Dominio.Entities.Chef", b =>
                {
                    b.Navigation("Hamburgesas");
                });

            modelBuilder.Entity("Dominio.Entities.Hamburgesa", b =>
                {
                    b.Navigation("HamburgesaIngredientes");
                });

            modelBuilder.Entity("Dominio.Entities.Ingrediente", b =>
                {
                    b.Navigation("HamburgesaIngredientes");
                });

            modelBuilder.Entity("Dominio.Entities.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("Dominio.Entities.Usuario", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
